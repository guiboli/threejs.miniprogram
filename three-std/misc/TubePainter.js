!function(){var r,e;r=this,e=function(r,e){"use strict";r.TubePainter=function(){const r=3e6,t=new e.BufferAttribute(new Float32Array(r),3);t.usage=e.DynamicDrawUsage;const a=new e.BufferAttribute(new Float32Array(r),3);a.usage=e.DynamicDrawUsage;const o=new e.BufferAttribute(new Float32Array(r),3);o.usage=e.DynamicDrawUsage;const n=new e.BufferGeometry;n.setAttribute("position",t),n.setAttribute("normal",a),n.setAttribute("color",o),n.drawRange.count=0;const y=new e.MeshStandardMaterial({vertexColors:!0}),c=new e.Mesh(n,y);c.frustumCulled=!1;const u=new e.Vector3,i=new e.Vector3,p=new e.Vector3,s=new e.Vector3,d=new e.Color(16777215);let f=1;function l(r,y,c,l){if(0===r.distanceToSquared(y))return;let A=n.drawRange.count;const w=function(r){const t=2*Math.PI,a=[],o=.01*r;for(let r=0;r<10;r++){const n=r/10*t;a.push(new e.Vector3(Math.sin(n)*o,Math.cos(n)*o,0))}return a}(f);for(let e=0,n=w.length;e<n;e++){const f=w[e],g=w[(e+1)%n];u.copy(f).applyMatrix4(l).add(y),i.copy(g).applyMatrix4(l).add(y),p.copy(g).applyMatrix4(c).add(r),s.copy(f).applyMatrix4(c).add(r),u.toArray(t.array,3*(A+0)),i.toArray(t.array,3*(A+1)),s.toArray(t.array,3*(A+2)),i.toArray(t.array,3*(A+3)),p.toArray(t.array,3*(A+4)),s.toArray(t.array,3*(A+5)),u.copy(f).applyMatrix4(l).normalize(),i.copy(g).applyMatrix4(l).normalize(),p.copy(g).applyMatrix4(c).normalize(),s.copy(f).applyMatrix4(c).normalize(),u.toArray(a.array,3*(A+0)),i.toArray(a.array,3*(A+1)),s.toArray(a.array,3*(A+2)),i.toArray(a.array,3*(A+3)),p.toArray(a.array,3*(A+4)),s.toArray(a.array,3*(A+5)),d.toArray(o.array,3*(A+0)),d.toArray(o.array,3*(A+1)),d.toArray(o.array,3*(A+2)),d.toArray(o.array,3*(A+3)),d.toArray(o.array,3*(A+4)),d.toArray(o.array,3*(A+5)),A+=6}n.drawRange.count=A}const A=new e.Vector3(0,1,0),w=new e.Vector3,g=new e.Vector3,M=new e.Matrix4,m=new e.Matrix4;let x=0;return{mesh:c,moveTo:function(r){w.copy(r),M.lookAt(g,w,A),g.copy(r),m.copy(M)},lineTo:function(r){w.copy(r),M.lookAt(g,w,A),l(w,g,M,m),g.copy(w),m.copy(M)},setSize:function(r){f=r},update:function(){const r=x,e=n.drawRange.count;r!==e&&(t.updateRange.offset=3*r,t.updateRange.count=3*(e-r),t.needsUpdate=!0,a.updateRange.offset=3*r,a.updateRange.count=3*(e-r),a.needsUpdate=!0,o.updateRange.offset=3*r,o.updateRange.count=3*(e-r),o.needsUpdate=!0,x=n.drawRange.count)}}},Object.defineProperty(r,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],e):e((r="undefined"!=typeof globalThis?globalThis:r||self).THREE=r["THREE-STD"]||{},r.THREE)}();
