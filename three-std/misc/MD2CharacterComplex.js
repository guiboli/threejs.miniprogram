!function(){var e,t;e=this,t=function(e,t,i,s){"use strict";e.MD2CharacterComplex=class{constructor(){this.scale=1,this.animationFPS=6,this.transitionFrames=15,this.maxSpeed=275,this.maxReverseSpeed=-275,this.frontAcceleration=600,this.backAcceleration=600,this.frontDecceleration=600,this.angularSpeed=2.5,this.root=new t.Object3D,this.meshBody=null,this.meshWeapon=null,this.controls=null,this.skinsBody=[],this.skinsWeapon=[],this.weapons=[],this.currentSkin=void 0,this.onLoadComplete=function(){},this.meshes=[],this.animations={},this.loadCounter=0,this.speed=0,this.bodyOrientation=0,this.walkSpeed=this.maxSpeed,this.crouchSpeed=.5*this.maxSpeed,this.activeAnimation=null,this.oldAnimation=null}enableShadows(e){for(let t=0;t<this.meshes.length;t++)this.meshes[t].castShadow=e,this.meshes[t].receiveShadow=e}setVisible(e){for(let t=0;t<this.meshes.length;t++)this.meshes[t].visible=e,this.meshes[t].visible=e}shareParts(e){this.animations=e.animations,this.walkSpeed=e.walkSpeed,this.crouchSpeed=e.crouchSpeed,this.skinsBody=e.skinsBody,this.skinsWeapon=e.skinsWeapon;const t=this._createPart(e.meshBody.geometry,this.skinsBody[0]);t.scale.set(this.scale,this.scale,this.scale),this.root.position.y=e.root.position.y,this.root.add(t),this.meshBody=t,this.meshes.push(t);for(let t=0;t<e.weapons.length;t++){const i=this._createPart(e.weapons[t].geometry,this.skinsWeapon[t]);i.scale.set(this.scale,this.scale,this.scale),i.visible=!1,i.name=e.weapons[t].name,this.root.add(i),this.weapons[t]=i,this.meshWeapon=i,this.meshes.push(i)}}loadParts(e){const s=this;function o(e,i){const s=new t.TextureLoader,o=[];for(let n=0;n<i.length;n++)o[n]=s.load(e+i[n],a),o[n].mapping=t.UVMapping,o[n].name=i[n],o[n].encoding=t.sRGBEncoding;return o}function a(){s.loadCounter-=1,0===s.loadCounter&&s.onLoadComplete()}this.animations=e.animations,this.walkSpeed=e.walkSpeed,this.crouchSpeed=e.crouchSpeed,this.loadCounter=2*e.weapons.length+e.skins.length+1;const n=[];for(let t=0;t<e.weapons.length;t++)n[t]=e.weapons[t][1];this.skinsBody=o(e.baseUrl+"skins/",e.skins),this.skinsWeapon=o(e.baseUrl+"skins/",n);const h=new i.MD2Loader;h.load(e.baseUrl+e.body,(function(e){const i=new t.Box3;i.setFromBufferAttribute(e.attributes.position),s.root.position.y=-s.scale*i.min.y;const o=s._createPart(e,s.skinsBody[0]);o.scale.set(s.scale,s.scale,s.scale),s.root.add(o),s.meshBody=o,s.meshes.push(o),a()}));const r=function(e,t){return function(i){const o=s._createPart(i,s.skinsWeapon[e]);o.scale.set(s.scale,s.scale,s.scale),o.visible=!1,o.name=t,s.root.add(o),s.weapons[e]=o,s.meshWeapon=o,s.meshes.push(o),a()}};for(let t=0;t<e.weapons.length;t++)h.load(e.baseUrl+e.weapons[t][0],r(t,e.weapons[t][0]))}setPlaybackRate(e){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/e),this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/e)}setWireframe(e){e?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))}setSkin(e){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[e],this.currentSkin=e)}setWeapon(e){for(let e=0;e<this.weapons.length;e++)this.weapons[e].visible=!1;const t=this.weapons[e];t&&(t.visible=!0,this.meshWeapon=t,this.activeAnimation&&(t.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation))))}setAnimation(e){e!==this.activeAnimation&&e&&(this.meshBody&&(this.meshBody.setAnimationWeight(e,0),this.meshBody.playAnimation(e),this.oldAnimation=this.activeAnimation,this.activeAnimation=e,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(e,0),this.meshWeapon.playAnimation(e)))}update(e){this.controls&&this.updateMovementModel(e),this.animations&&(this.updateBehaviors(),this.updateAnimations(e))}updateAnimations(e){let t=1;this.blendCounter>0&&(t=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1),this.meshBody&&(this.meshBody.update(e),this.meshBody.setAnimationWeight(this.activeAnimation,t),this.meshBody.setAnimationWeight(this.oldAnimation,1-t)),this.meshWeapon&&(this.meshWeapon.update(e),this.meshWeapon.setAnimationWeight(this.activeAnimation,t),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-t))}updateBehaviors(){const e=this.controls,t=this.animations;let i,s;e.crouch?(i=t.crouchMove,s=t.crouchIdle):(i=t.move,s=t.idle),e.jump&&(i=t.jump,s=t.jump),e.attack&&(e.crouch?(i=t.crouchAttack,s=t.crouchAttack):(i=t.attack,s=t.attack)),(e.moveForward||e.moveBackward||e.moveLeft||e.moveRight)&&this.activeAnimation!==i&&this.setAnimation(i),Math.abs(this.speed)<.2*this.maxSpeed&&!(e.moveLeft||e.moveRight||e.moveForward||e.moveBackward)&&this.activeAnimation!==s&&this.setAnimation(s),e.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation))),e.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))}updateMovementModel(e){function i(e){return 1===e?1:1-Math.pow(2,-10*e)}const s=this.controls;if(s.crouch?this.maxSpeed=this.crouchSpeed:this.maxSpeed=this.walkSpeed,this.maxReverseSpeed=-this.maxSpeed,s.moveForward&&(this.speed=t.MathUtils.clamp(this.speed+e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),s.moveBackward&&(this.speed=t.MathUtils.clamp(this.speed-e*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed)),s.moveLeft&&(this.bodyOrientation+=e*this.angularSpeed,this.speed=t.MathUtils.clamp(this.speed+1*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),s.moveRight&&(this.bodyOrientation-=e*this.angularSpeed,this.speed=t.MathUtils.clamp(this.speed+1*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),!s.moveForward&&!s.moveBackward)if(this.speed>0){const s=i(this.speed/this.maxSpeed);this.speed=t.MathUtils.clamp(this.speed-s*e*this.frontDecceleration,0,this.maxSpeed)}else{const s=i(this.speed/this.maxReverseSpeed);this.speed=t.MathUtils.clamp(this.speed+s*e*this.backAcceleration,this.maxReverseSpeed,0)}const o=this.speed*e;this.root.position.x+=Math.sin(this.bodyOrientation)*o,this.root.position.z+=Math.cos(this.bodyOrientation)*o,this.root.rotation.y=this.bodyOrientation}_createPart(e,i){const o=new t.MeshLambertMaterial({color:16755200,wireframe:!0}),a=new t.MeshLambertMaterial({color:16777215,wireframe:!1,map:i}),n=new s.MorphBlendMesh(e,a);return n.rotation.y=-Math.PI/2,n.materialTexture=a,n.materialWireframe=o,n.autoCreateAnimations(this.animationFPS),n}},Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("../loaders/MD2Loader.js"),require("./MorphBlendMesh.js")):"function"==typeof define&&define.amd?define(["exports","three","../loaders/MD2Loader","./MorphBlendMesh"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE,e.THREE)}();
