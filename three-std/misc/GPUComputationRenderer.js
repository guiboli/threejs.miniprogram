!function(){var e,t;e=this,t=function(e,t){"use strict";e.GPUComputationRenderer=class{constructor(e,r,n){this.variables=[],this.currentTextureIndex=0;let a=t.FloatType;const i=new t.Scene,s=new t.Camera;s.position.z=1;const u={passThruTexture:{value:null}},l=c("uniform sampler2D passThruTexture;\n\nvoid main() {\n\n\tvec2 uv = gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor = texture2D( passThruTexture, uv );\n\n}\n",u),o=new t.Mesh(new t.PlaneGeometry(2,2),l);function d(t){t.defines.resolution="vec2( "+e.toFixed(1)+", "+r.toFixed(1)+" )"}function c(e,r){r=r||{};const n=new t.ShaderMaterial({uniforms:r,vertexShader:"void main()\t{\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:e});return d(n),n}i.add(o),this.setDataType=function(e){return a=e,this},this.addVariable=function(e,r,n){const a={name:e,initialValueTexture:n,material:this.createShaderMaterial(r),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:t.NearestFilter,magFilter:t.NearestFilter};return this.variables.push(a),a},this.setVariableDependencies=function(e,t){e.dependencies=t},this.init=function(){if(!1===n.capabilities.isWebGL2&&!1===n.extensions.has("OES_texture_float"))return"No OES_texture_float support for float textures.";if(0===n.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(let t=0;t<this.variables.length;t++){const n=this.variables[t];n.renderTargets[0]=this.createRenderTarget(e,r,n.wrapS,n.wrapT,n.minFilter,n.magFilter),n.renderTargets[1]=this.createRenderTarget(e,r,n.wrapS,n.wrapT,n.minFilter,n.magFilter),this.renderTexture(n.initialValueTexture,n.renderTargets[0]),this.renderTexture(n.initialValueTexture,n.renderTargets[1]);const a=n.material,i=a.uniforms;if(null!==n.dependencies)for(let e=0;e<n.dependencies.length;e++){const t=n.dependencies[e];if(t.name!==n.name){let e=!1;for(let r=0;r<this.variables.length;r++)if(t.name===this.variables[r].name){e=!0;break}if(!e)return"Variable dependency not found. Variable="+n.name+", dependency="+t.name}i[t.name]={value:null},a.fragmentShader="\nuniform sampler2D "+t.name+";\n"+a.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){const e=this.currentTextureIndex,t=0===this.currentTextureIndex?1:0;for(let r=0,n=this.variables.length;r<n;r++){const n=this.variables[r];if(null!==n.dependencies){const t=n.material.uniforms;for(let r=0,a=n.dependencies.length;r<a;r++){const a=n.dependencies[r];t[a.name].value=a.renderTargets[e].texture}}this.doRenderTarget(n.material,n.renderTargets[t])}this.currentTextureIndex=t},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=d,this.createShaderMaterial=c,this.createRenderTarget=function(n,i,s,u,l,o){return n=n||e,i=i||r,s=s||t.ClampToEdgeWrapping,u=u||t.ClampToEdgeWrapping,l=l||t.NearestFilter,o=o||t.NearestFilter,new t.WebGLRenderTarget(n,i,{wrapS:s,wrapT:u,minFilter:l,magFilter:o,format:t.RGBAFormat,type:a,depthBuffer:!1})},this.createTexture=function(){const n=new Float32Array(e*r*4),a=new t.DataTexture(n,e,r,t.RGBAFormat,t.FloatType);return a.needsUpdate=!0,a},this.renderTexture=function(e,t){u.passThruTexture.value=e,this.doRenderTarget(l,t),u.passThruTexture.value=null},this.doRenderTarget=function(e,t){const r=n.getRenderTarget();o.material=e,n.setRenderTarget(t),n.render(i,s),o.material=l,n.setRenderTarget(r)}}},Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
