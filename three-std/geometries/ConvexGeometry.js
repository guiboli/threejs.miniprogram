!function(){var e,t;e=this,t=function(e,t,o){"use strict";class n extends t.BufferGeometry{constructor(e=[]){super();const n=[],r=[];void 0===o.ConvexHull&&console.error("THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull");const s=(new o.ConvexHull).setFromPoints(e).faces;for(let e=0;e<s.length;e++){const t=s[e];let o=t.edge;do{const e=o.head().point;n.push(e.x,e.y,e.z),r.push(t.normal.x,t.normal.y,t.normal.z),o=o.next}while(o!==t.edge)}this.setAttribute("position",new t.Float32BufferAttribute(n,3)),this.setAttribute("normal",new t.Float32BufferAttribute(r,3))}}e.ConvexGeometry=n,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("../math/ConvexHull.js")):"function"==typeof define&&define.amd?define(["exports","three","../math/ConvexHull"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE)}();
