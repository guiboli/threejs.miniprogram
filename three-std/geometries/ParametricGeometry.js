!function(){var e,t;e=this,t=function(e,t){"use strict";class r extends t.BufferGeometry{constructor(e=((e,t,r)=>r.set(e,t,Math.cos(e)*Math.sin(t))),r=8,s=8){super(),this.type="ParametricGeometry",this.parameters={func:e,slices:r,stacks:s};const o=[],n=[],i=[],c=[],u=1e-5,f=new t.Vector3,a=new t.Vector3,l=new t.Vector3,h=new t.Vector3,p=new t.Vector3;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=r+1;for(let t=0;t<=s;t++){const o=t/s;for(let t=0;t<=r;t++){const s=t/r;e(s,o,a),n.push(a.x,a.y,a.z),s-u>=0?(e(s-u,o,l),h.subVectors(a,l)):(e(s+u,o,l),h.subVectors(l,a)),o-u>=0?(e(s,o-u,l),p.subVectors(a,l)):(e(s,o+u,l),p.subVectors(l,a)),f.crossVectors(h,p).normalize(),i.push(f.x,f.y,f.z),c.push(s,o)}}for(let e=0;e<s;e++)for(let t=0;t<r;t++){const r=e*d+t,s=e*d+t+1,n=(e+1)*d+t+1,i=(e+1)*d+t;o.push(r,s,i),o.push(s,n,i)}this.setIndex(o),this.setAttribute("position",new t.Float32BufferAttribute(n,3)),this.setAttribute("normal",new t.Float32BufferAttribute(i,3)),this.setAttribute("uv",new t.Float32BufferAttribute(c,2))}}e.ParametricGeometry=r,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
