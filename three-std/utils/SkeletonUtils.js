!function(){var e,t;e=this,t=function(e,t){"use strict";function n(e,n,o={}){const s=new t.Vector3,a=new t.Quaternion,l=new t.Vector3,p=new t.Matrix4,c=new t.Matrix4,u=new t.Matrix4;o.preserveMatrix=void 0===o.preserveMatrix||o.preserveMatrix,o.preservePosition=void 0===o.preservePosition||o.preservePosition,o.preserveHipPosition=void 0!==o.preserveHipPosition&&o.preserveHipPosition,o.useTargetMatrix=void 0!==o.useTargetMatrix&&o.useTargetMatrix,o.hip=void 0!==o.hip?o.hip:"hip",o.names=o.names||{};const m=n.isObject3D?n.skeleton.bones:r(n),f=e.isObject3D?e.skeleton.bones:r(e);let d,x,h,M,y;if(e.isObject3D?e.skeleton.pose():(o.useTargetMatrix=!0,o.preserveMatrix=!1),o.preservePosition){y=[];for(let e=0;e<f.length;e++)y.push(f[e].position.clone())}if(o.preserveMatrix){e.updateMatrixWorld(),e.matrixWorld.identity();for(let t=0;t<e.children.length;++t)e.children[t].updateMatrixWorld(!0)}if(o.offsets){d=[];for(let e=0;e<f.length;++e)x=f[e],h=o.names[x.name]||x.name,o.offsets[h]&&(x.matrix.multiply(o.offsets[h]),x.matrix.decompose(x.position,x.quaternion,x.scale),x.updateMatrixWorld()),d.push(x.matrixWorld.clone())}for(let t=0;t<f.length;++t){if(x=f[t],h=o.names[x.name]||x.name,M=i(h,m),u.copy(x.matrixWorld),M){if(M.updateMatrixWorld(),o.useTargetMatrix?c.copy(M.matrixWorld):(c.copy(e.matrixWorld).invert(),c.multiply(M.matrixWorld)),l.setFromMatrixScale(c),c.scale(l.set(1/l.x,1/l.y,1/l.z)),u.makeRotationFromQuaternion(a.setFromRotationMatrix(c)),e.isObject3D){const t=f.indexOf(x),n=d?d[t]:p.copy(e.skeleton.boneInverses[t]).invert();u.multiply(n)}u.copyPosition(c)}x.parent&&x.parent.isBone?(x.matrix.copy(x.parent.matrixWorld).invert(),x.matrix.multiply(u)):x.matrix.copy(u),o.preserveHipPosition&&h===o.hip&&x.matrix.setPosition(s.set(0,x.position.y,0)),x.matrix.decompose(x.position,x.quaternion,x.scale),x.updateMatrixWorld()}if(o.preservePosition)for(let e=0;e<f.length;++e)x=f[e],h=o.names[x.name]||x.name,h!==o.hip&&x.position.copy(y[e]);o.preserveMatrix&&e.updateMatrixWorld(!0)}function o(e){const n=new t.SkeletonHelper(e.bones[0]);return n.skeleton=e,n}function r(e){return Array.isArray(e)?e:e.bones}function i(e,t){for(let n=0,o=r(t);n<o.length;n++)if(e===o[n].name)return o[n]}function s(e,t){for(;e.isBone;){if(-1!==t.indexOf(e.name))return e;e=e.parent}}function a(e,t,n){n(e,t);for(let o=0;o<e.children.length;o++)a(e.children[o],t.children[o],n)}e.clone=function(e){const t=new Map,n=new Map,o=e.clone();return a(e,o,(function(e,o){t.set(o,e),n.set(e,o)})),o.traverse((function(e){if(!e.isSkinnedMesh)return;const o=e,r=t.get(e),i=r.skeleton.bones;o.skeleton=r.skeleton.clone(),o.bindMatrix.copy(r.bindMatrix),o.skeleton.bones=i.map((function(e){return n.get(e)})),o.bind(o.skeleton,o.bindMatrix)})),o},e.findBoneTrackData=function(e,t){const n=/\[(.*)\]\.(.*)/,o={name:e};for(let r=0;r<t.length;++r){const i=n.exec(t[r].name);i&&e===i[1]&&(o[i[2]]=r)}return o},e.getBoneByName=i,e.getBones=r,e.getEqualsBonesNames=function(e,t){const n=r(e),o=r(t),i=[];e:for(let e=0;e<n.length;e++){const t=n[e].name;for(let e=0;e<o.length;e++)if(t===o[e].name){i.push(t);continue e}}return i},e.getHelperFromSkeleton=o,e.getNearestBone=s,e.getSkeletonOffsets=function(e,n,a={}){const l=new t.Vector3,p=new t.Vector3,c=new t.Vector3,u=new t.Vector3,m=new t.Vector2,f=new t.Vector2;a.hip=void 0!==a.hip?a.hip:"hip",a.names=a.names||{},n.isObject3D||(n=o(n));const d=Object.keys(a.names),x=Object.values(a.names),h=n.isObject3D?n.skeleton.bones:r(n),M=e.isObject3D?e.skeleton.bones:r(e),y=[];let v,b,g,w;for(e.skeleton.pose(),w=0;w<M.length;++w)if(v=M[w],g=a.names[v.name]||v.name,b=i(g,h),b&&g!==a.hip){const e=s(v.parent,d),n=s(b.parent,x);e.updateMatrixWorld(),n.updateMatrixWorld(),l.setFromMatrixPosition(e.matrixWorld),p.setFromMatrixPosition(v.matrixWorld),c.setFromMatrixPosition(n.matrixWorld),u.setFromMatrixPosition(b.matrixWorld),m.subVectors(new t.Vector2(p.x,p.y),new t.Vector2(l.x,l.y)).normalize(),f.subVectors(new t.Vector2(u.x,u.y),new t.Vector2(c.x,c.y)).normalize();const o=m.angle()-f.angle(),r=(new t.Matrix4).makeRotationFromEuler(new t.Euler(0,0,o));v.matrix.multiply(r),v.matrix.decompose(v.position,v.quaternion,v.scale),v.updateMatrixWorld(),y[g]=r}return y},e.renameBones=function(e,t){const n=r(e);for(let e=0;e<n.length;++e){const o=n[e];t[o.name]&&(o.name=t[o.name])}return this},e.retarget=n,e.retargetClip=function(e,s,a,l={}){l.useFirstFramePosition=void 0!==l.useFirstFramePosition&&l.useFirstFramePosition,l.fps=void 0!==l.fps?l.fps:30,l.names=l.names||[],s.isObject3D||(s=o(s));const p=Math.round(a.duration*(l.fps/1e3)*1e3),c=1/l.fps,u=[],m=new t.AnimationMixer(s),f=r(e.skeleton),d=[];let x,h,M,y,v;m.clipAction(a).play(),m.update(0),s.updateMatrixWorld();for(let t=0;t<p;++t){const o=t*c;n(e,s,l);for(let e=0;e<f.length;++e)v=l.names[f[e].name]||f[e].name,M=i(v,s.skeleton),M&&(h=f[e],y=d[e]=d[e]||{bone:h},l.hip===v&&(y.pos||(y.pos={times:new Float32Array(p),values:new Float32Array(3*p)}),l.useFirstFramePosition&&(0===t&&(x=h.position.clone()),h.position.sub(x)),y.pos.times[t]=o,h.position.toArray(y.pos.values,3*t)),y.quat||(y.quat={times:new Float32Array(p),values:new Float32Array(4*p)}),y.quat.times[t]=o,h.quaternion.toArray(y.quat.values,4*t));m.update(c),s.updateMatrixWorld()}for(let e=0;e<d.length;++e)y=d[e],y&&(y.pos&&u.push(new t.VectorKeyframeTrack(".bones["+y.bone.name+"].position",y.pos.times,y.pos.values)),u.push(new t.QuaternionKeyframeTrack(".bones["+y.bone.name+"].quaternion",y.quat.times,y.quat.values)));return m.uncacheAction(a),new t.AnimationClip(a.name,-1,u)},Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
