!function(){var e,t;e=this,t=function(e,t){"use strict";e.attach=function(e,t,n){console.warn("THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead."),n.attach(e)},e.createMeshesFromInstancedMesh=function(e){const n=new t.Group,a=e.count,o=e.geometry,c=e.material;for(let r=0;r<a;r++){const a=new t.Mesh(o,c);e.getMatrixAt(r,a.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),n.add(a)}return n.copy(e),n.updateMatrixWorld(),n},e.createMultiMaterialObject=function(e,n){const a=new t.Group;for(let o=0,c=n.length;o<c;o++)a.add(new t.Mesh(e,n[o]));return a},e.detach=function(e,t,n){console.warn("THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead."),n.attach(e)},Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
