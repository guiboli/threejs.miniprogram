!function(){var e,t;e=this,t=function(e,t){"use strict";e.UVsDebug=function(e,r=1024){const o=new t.Vector2,f=new t.Vector2,n=[new t.Vector2,new t.Vector2,new t.Vector2],i=[],l=document.createElement("canvas"),u=r,c=r;l.width=u,l.height=c;const s=l.getContext("2d");if(s.lineWidth=1,s.strokeStyle="rgb( 63, 63, 63 )",s.textAlign="center",s.fillStyle="rgb( 255, 255, 255 )",s.fillRect(0,0,u,c),!e.isGeometry){{const t=e.index,r=e.attributes.uv;if(t)for(let e=0,o=t.count;e<o;e+=3)i[0]=t.getX(e),i[1]=t.getX(e+1),i[2]=t.getX(e+2),n[0].fromBufferAttribute(r,i[0]),n[1].fromBufferAttribute(r,i[1]),n[2].fromBufferAttribute(r,i[2]),d(i,n,e/3);else for(let e=0,t=r.count;e<t;e+=3)i[0]=e,i[1]=e+1,i[2]=e+2,n[0].fromBufferAttribute(r,i[0]),n[1].fromBufferAttribute(r,i[1]),n[2].fromBufferAttribute(r,i[2]),d(i,n,e/3)}return l}function d(e,t,r){s.beginPath(),o.set(0,0);for(let e=0,r=t.length;e<r;e++){const r=t[e];o.x+=r.x,o.y+=r.y,0===e?s.moveTo(r.x*(u-2)+.5,(1-r.y)*(c-2)+.5):s.lineTo(r.x*(u-2)+.5,(1-r.y)*(c-2)+.5)}s.closePath(),s.stroke(),o.divideScalar(t.length),s.font="18px Arial",s.fillStyle="rgb( 63, 63, 63 )",s.fillText(r,o.x*u,(1-o.y)*c),o.x>.95&&s.fillText(r,o.x%1*u,(1-o.y)*c),s.font="12px Arial",s.fillStyle="rgb( 191, 191, 191 )";for(let r=0,n=t.length;r<n;r++){const n=t[r];f.addVectors(o,n).divideScalar(2);const i=e[r];s.fillText("abc"[r]+i,f.x*u,(1-f.y)*c),f.x>.95&&s.fillText("abc"[r]+i,f.x%1*u,(1-f.y)*c)}}console.error("THREE.UVsDebug no longer supports Geometry. Use THREE.BufferGeometry instead.")},Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
