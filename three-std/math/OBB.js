!function(){var e,t;e=this,t=function(e,t){"use strict";const s={c:null,u:[new t.Vector3,new t.Vector3,new t.Vector3],e:[]},i={c:null,u:[new t.Vector3,new t.Vector3,new t.Vector3],e:[]},r=[[],[],[]],a=[[],[],[]],n=[],o=new t.Vector3,h=new t.Vector3,l=new t.Vector3,c=new t.Vector3,u=new t.Vector3,f=new t.Vector3,d=new t.Matrix3,S=new t.Box3,m=new t.Matrix4,p=new t.Matrix4,y=new t.Ray;class z{constructor(e=new t.Vector3,s=new t.Vector3,i=new t.Matrix3){this.center=e,this.halfSize=s,this.rotation=i}set(e,t,s){return this.center=e,this.halfSize=t,this.rotation=s,this}copy(e){return this.center.copy(e.center),this.halfSize.copy(e.halfSize),this.rotation.copy(e.rotation),this}clone(){return(new this.constructor).copy(this)}getSize(e){return e.copy(this.halfSize).multiplyScalar(2)}clampPoint(e,s){const i=this.halfSize;c.subVectors(e,this.center),this.rotation.extractBasis(o,h,l),s.copy(this.center);const r=t.MathUtils.clamp(c.dot(o),-i.x,i.x);s.add(o.multiplyScalar(r));const a=t.MathUtils.clamp(c.dot(h),-i.y,i.y);s.add(h.multiplyScalar(a));const n=t.MathUtils.clamp(c.dot(l),-i.z,i.z);return s.add(l.multiplyScalar(n)),s}containsPoint(e){return c.subVectors(e,this.center),this.rotation.extractBasis(o,h,l),Math.abs(c.dot(o))<=this.halfSize.x&&Math.abs(c.dot(h))<=this.halfSize.y&&Math.abs(c.dot(l))<=this.halfSize.z}intersectsBox3(e){return this.intersectsOBB(M.fromBox3(e))}intersectsSphere(e){return this.clampPoint(e.center,f),f.distanceToSquared(e.center)<=e.radius*e.radius}intersectsOBB(e,t=Number.EPSILON){s.c=this.center,s.e[0]=this.halfSize.x,s.e[1]=this.halfSize.y,s.e[2]=this.halfSize.z,this.rotation.extractBasis(s.u[0],s.u[1],s.u[2]),i.c=e.center,i.e[0]=e.halfSize.x,i.e[1]=e.halfSize.y,i.e[2]=e.halfSize.z,e.rotation.extractBasis(i.u[0],i.u[1],i.u[2]);for(let e=0;e<3;e++)for(let t=0;t<3;t++)r[e][t]=s.u[e].dot(i.u[t]);c.subVectors(i.c,s.c),n[0]=c.dot(s.u[0]),n[1]=c.dot(s.u[1]),n[2]=c.dot(s.u[2]);for(let e=0;e<3;e++)for(let s=0;s<3;s++)a[e][s]=Math.abs(r[e][s])+t;let o,h;for(let e=0;e<3;e++)if(o=s.e[e],h=i.e[0]*a[e][0]+i.e[1]*a[e][1]+i.e[2]*a[e][2],Math.abs(n[e])>o+h)return!1;for(let e=0;e<3;e++)if(o=s.e[0]*a[0][e]+s.e[1]*a[1][e]+s.e[2]*a[2][e],h=i.e[e],Math.abs(n[0]*r[0][e]+n[1]*r[1][e]+n[2]*r[2][e])>o+h)return!1;return o=s.e[1]*a[2][0]+s.e[2]*a[1][0],h=i.e[1]*a[0][2]+i.e[2]*a[0][1],!(Math.abs(n[2]*r[1][0]-n[1]*r[2][0])>o+h||(o=s.e[1]*a[2][1]+s.e[2]*a[1][1],h=i.e[0]*a[0][2]+i.e[2]*a[0][0],Math.abs(n[2]*r[1][1]-n[1]*r[2][1])>o+h||(o=s.e[1]*a[2][2]+s.e[2]*a[1][2],h=i.e[0]*a[0][1]+i.e[1]*a[0][0],Math.abs(n[2]*r[1][2]-n[1]*r[2][2])>o+h||(o=s.e[0]*a[2][0]+s.e[2]*a[0][0],h=i.e[1]*a[1][2]+i.e[2]*a[1][1],Math.abs(n[0]*r[2][0]-n[2]*r[0][0])>o+h||(o=s.e[0]*a[2][1]+s.e[2]*a[0][1],h=i.e[0]*a[1][2]+i.e[2]*a[1][0],Math.abs(n[0]*r[2][1]-n[2]*r[0][1])>o+h||(o=s.e[0]*a[2][2]+s.e[2]*a[0][2],h=i.e[0]*a[1][1]+i.e[1]*a[1][0],Math.abs(n[0]*r[2][2]-n[2]*r[0][2])>o+h||(o=s.e[0]*a[1][0]+s.e[1]*a[0][0],h=i.e[1]*a[2][2]+i.e[2]*a[2][1],Math.abs(n[1]*r[0][0]-n[0]*r[1][0])>o+h||(o=s.e[0]*a[1][1]+s.e[1]*a[0][1],h=i.e[0]*a[2][2]+i.e[2]*a[2][0],Math.abs(n[1]*r[0][1]-n[0]*r[1][1])>o+h||(o=s.e[0]*a[1][2]+s.e[1]*a[0][2],h=i.e[0]*a[2][1]+i.e[1]*a[2][0],Math.abs(n[1]*r[0][2]-n[0]*r[1][2])>o+h)))))))))}intersectsPlane(e){this.rotation.extractBasis(o,h,l);const t=this.halfSize.x*Math.abs(e.normal.dot(o))+this.halfSize.y*Math.abs(e.normal.dot(h))+this.halfSize.z*Math.abs(e.normal.dot(l)),s=e.normal.dot(this.center)-e.constant;return Math.abs(s)<=t}intersectRay(e,t){return this.getSize(u),S.setFromCenterAndSize(c.set(0,0,0),u),m.setFromMatrix3(this.rotation),m.setPosition(this.center),p.copy(m).invert(),y.copy(e).applyMatrix4(p),y.intersectBox(S,t)?t.applyMatrix4(m):null}intersectsRay(e){return null!==this.intersectRay(e,c)}fromBox3(e){return e.getCenter(this.center),e.getSize(this.halfSize).multiplyScalar(.5),this.rotation.identity(),this}equals(e){return e.center.equals(this.center)&&e.halfSize.equals(this.halfSize)&&e.rotation.equals(this.rotation)}applyMatrix4(e){const t=e.elements;let s=c.set(t[0],t[1],t[2]).length();const i=c.set(t[4],t[5],t[6]).length(),r=c.set(t[8],t[9],t[10]).length();e.determinant()<0&&(s=-s),d.setFromMatrix4(e);const a=1/s,n=1/i,o=1/r;return d.elements[0]*=a,d.elements[1]*=a,d.elements[2]*=a,d.elements[3]*=n,d.elements[4]*=n,d.elements[5]*=n,d.elements[6]*=o,d.elements[7]*=o,d.elements[8]*=o,this.rotation.multiply(d),this.halfSize.x*=s,this.halfSize.y*=i,this.halfSize.z*=r,c.setFromMatrixPosition(e),this.center.add(c),this}}const M=new z;e.OBB=z,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
