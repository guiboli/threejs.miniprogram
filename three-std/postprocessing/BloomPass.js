!function(){var e,r;e=this,r=function(e,r,t,n,o){"use strict";class s extends t.Pass{constructor(e=1,i=25,a=4,l=256){super();const d={minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RGBAFormat};this.renderTargetX=new r.WebGLRenderTarget(l,l,d),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new r.WebGLRenderTarget(l,l,d),this.renderTargetY.texture.name="BloomPass.y",void 0===n.CopyShader&&console.error("THREE.BloomPass relies on CopyShader");const u=n.CopyShader;this.copyUniforms=r.UniformsUtils.clone(u.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new r.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,blending:r.AdditiveBlending,transparent:!0}),void 0===o.ConvolutionShader&&console.error("THREE.BloomPass relies on ConvolutionShader");const h=o.ConvolutionShader;this.convolutionUniforms=r.UniformsUtils.clone(h.uniforms),this.convolutionUniforms.uImageIncrement.value=s.blurX,this.convolutionUniforms.cKernel.value=o.ConvolutionShader.buildKernel(a),this.materialConvolution=new r.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,defines:{KERNEL_SIZE_FLOAT:i.toFixed(1),KERNEL_SIZE_INT:i.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new t.FullScreenQuad(null)}render(e,r,t,n,o){o&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=t.texture,this.convolutionUniforms.uImageIncrement.value=s.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=s.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,o&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e)}}s.blurX=new r.Vector2(.001953125,0),s.blurY=new r.Vector2(0,.001953125),e.BloomPass=s,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("three"),require("./Pass.js"),require("../shaders/CopyShader.js"),require("../shaders/ConvolutionShader.js")):"function"==typeof define&&define.amd?define(["exports","three","./Pass","../shaders/CopyShader","../shaders/ConvolutionShader"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE,e.THREE,e.THREE)}();
