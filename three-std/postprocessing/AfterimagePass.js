!function(){var e,t;e=this,t=function(e,t,r,i){"use strict";class s extends r.Pass{constructor(e=.96){super(),void 0===i.AfterimageShader&&console.error("THREE.AfterimagePass relies on AfterimageShader"),this.shader=i.AfterimageShader,this.uniforms=t.UniformsUtils.clone(this.shader.uniforms),this.uniforms.damp.value=e,this.textureComp=new t.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:t.LinearFilter,magFilter:t.NearestFilter,format:t.RGBAFormat}),this.textureOld=new t.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:t.LinearFilter,magFilter:t.NearestFilter,format:t.RGBAFormat}),this.shaderMaterial=new t.ShaderMaterial({uniforms:this.uniforms,vertexShader:this.shader.vertexShader,fragmentShader:this.shader.fragmentShader}),this.compFsQuad=new r.FullScreenQuad(this.shaderMaterial);const s=new t.MeshBasicMaterial;this.copyFsQuad=new r.FullScreenQuad(s)}render(e,t,r){this.uniforms.tOld.value=this.textureOld.texture,this.uniforms.tNew.value=r.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));const i=this.textureOld;this.textureOld=this.textureComp,this.textureComp=i}setSize(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}}e.AfterimagePass=s,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("./Pass.js"),require("../shaders/AfterimageShader.js")):"function"==typeof define&&define.amd?define(["exports","three","./Pass","../shaders/AfterimageShader"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE,e.THREE)}();
