!function(){var e,r;e=this,r=function(e,r,t,a,s,i,l){"use strict";class h extends t.Pass{constructor(e,h,o=!1,n=!1,u=new r.Vector2(256,256)){let d;super(),this.scene=e,this.camera=h,this.clear=!0,this.needsSwap=!1,this.supportsDepthTextureExtension=o,this.supportsNormalTexture=n,this.originalClearColor=new r.Color,this._oldClearColor=new r.Color,this.oldClearAlpha=1,this.params={output:0,saoBias:.5,saoIntensity:.18,saoScale:1,saoKernelRadius:100,saoMinResolution:0,saoBlur:!0,saoBlurRadius:8,saoBlurStdDev:4,saoBlurDepthCutoff:.01},this.resolution=new r.Vector2(u.x,u.y),this.saoRenderTarget=new r.WebGLRenderTarget(this.resolution.x,this.resolution.y,{minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RGBAFormat}),this.blurIntermediateRenderTarget=this.saoRenderTarget.clone(),this.beautyRenderTarget=this.saoRenderTarget.clone(),this.normalRenderTarget=new r.WebGLRenderTarget(this.resolution.x,this.resolution.y,{minFilter:r.NearestFilter,magFilter:r.NearestFilter,format:r.RGBAFormat}),this.depthRenderTarget=this.normalRenderTarget.clone(),this.supportsDepthTextureExtension&&(d=new r.DepthTexture,d.type=r.UnsignedShortType,this.beautyRenderTarget.depthTexture=d,this.beautyRenderTarget.depthBuffer=!0),this.depthMaterial=new r.MeshDepthMaterial,this.depthMaterial.depthPacking=r.RGBADepthPacking,this.depthMaterial.blending=r.NoBlending,this.normalMaterial=new r.MeshNormalMaterial,this.normalMaterial.blending=r.NoBlending,void 0===a.SAOShader&&console.error("THREE.SAOPass relies on SAOShader"),this.saoMaterial=new r.ShaderMaterial({defines:Object.assign({},a.SAOShader.defines),fragmentShader:a.SAOShader.fragmentShader,vertexShader:a.SAOShader.vertexShader,uniforms:r.UniformsUtils.clone(a.SAOShader.uniforms)}),this.saoMaterial.extensions.derivatives=!0,this.saoMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.saoMaterial.defines.NORMAL_TEXTURE=this.supportsNormalTexture?1:0,this.saoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.saoMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?d:this.depthRenderTarget.texture,this.saoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.saoMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.blending=r.NoBlending,void 0===s.DepthLimitedBlurShader&&console.error("THREE.SAOPass relies on DepthLimitedBlurShader"),this.vBlurMaterial=new r.ShaderMaterial({uniforms:r.UniformsUtils.clone(s.DepthLimitedBlurShader.uniforms),defines:Object.assign({},s.DepthLimitedBlurShader.defines),vertexShader:s.DepthLimitedBlurShader.vertexShader,fragmentShader:s.DepthLimitedBlurShader.fragmentShader}),this.vBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.vBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.vBlurMaterial.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.vBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?d:this.depthRenderTarget.texture,this.vBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.vBlurMaterial.blending=r.NoBlending,this.hBlurMaterial=new r.ShaderMaterial({uniforms:r.UniformsUtils.clone(s.DepthLimitedBlurShader.uniforms),defines:Object.assign({},s.DepthLimitedBlurShader.defines),vertexShader:s.DepthLimitedBlurShader.vertexShader,fragmentShader:s.DepthLimitedBlurShader.fragmentShader}),this.hBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.hBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.hBlurMaterial.uniforms.tDiffuse.value=this.blurIntermediateRenderTarget.texture,this.hBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?d:this.depthRenderTarget.texture,this.hBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.hBlurMaterial.blending=r.NoBlending,void 0===i.CopyShader&&console.error("THREE.SAOPass relies on CopyShader"),this.materialCopy=new r.ShaderMaterial({uniforms:r.UniformsUtils.clone(i.CopyShader.uniforms),vertexShader:i.CopyShader.vertexShader,fragmentShader:i.CopyShader.fragmentShader,blending:r.NoBlending}),this.materialCopy.transparent=!0,this.materialCopy.depthTest=!1,this.materialCopy.depthWrite=!1,this.materialCopy.blending=r.CustomBlending,this.materialCopy.blendSrc=r.DstColorFactor,this.materialCopy.blendDst=r.ZeroFactor,this.materialCopy.blendEquation=r.AddEquation,this.materialCopy.blendSrcAlpha=r.DstAlphaFactor,this.materialCopy.blendDstAlpha=r.ZeroFactor,this.materialCopy.blendEquationAlpha=r.AddEquation,void 0===l.UnpackDepthRGBAShader&&console.error("THREE.SAOPass relies on UnpackDepthRGBAShader"),this.depthCopy=new r.ShaderMaterial({uniforms:r.UniformsUtils.clone(l.UnpackDepthRGBAShader.uniforms),vertexShader:l.UnpackDepthRGBAShader.vertexShader,fragmentShader:l.UnpackDepthRGBAShader.fragmentShader,blending:r.NoBlending}),this.fsQuad=new t.FullScreenQuad(null)}render(e,t,a){if(this.renderToScreen&&(this.materialCopy.blending=r.NoBlending,this.materialCopy.uniforms.tDiffuse.value=a.texture,this.materialCopy.needsUpdate=!0,this.renderPass(e,this.materialCopy,null)),1===this.params.output)return;e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const i=e.autoClear;e.autoClear=!1,e.setRenderTarget(this.depthRenderTarget),e.clear(),this.saoMaterial.uniforms.bias.value=this.params.saoBias,this.saoMaterial.uniforms.intensity.value=this.params.saoIntensity,this.saoMaterial.uniforms.scale.value=this.params.saoScale,this.saoMaterial.uniforms.kernelRadius.value=this.params.saoKernelRadius,this.saoMaterial.uniforms.minResolution.value=this.params.saoMinResolution,this.saoMaterial.uniforms.cameraNear.value=this.camera.near,this.saoMaterial.uniforms.cameraFar.value=this.camera.far;const l=this.params.saoBlurDepthCutoff*(this.camera.far-this.camera.near);this.vBlurMaterial.uniforms.depthCutoff.value=l,this.hBlurMaterial.uniforms.depthCutoff.value=l,this.vBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.vBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.hBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.hBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.params.saoBlurRadius=Math.floor(this.params.saoBlurRadius),this.prevStdDev===this.params.saoBlurStdDev&&this.prevNumSamples===this.params.saoBlurRadius||(s.BlurShaderUtils.configure(this.vBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new r.Vector2(0,1)),s.BlurShaderUtils.configure(this.hBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new r.Vector2(1,0)),this.prevStdDev=this.params.saoBlurStdDev,this.prevNumSamples=this.params.saoBlurRadius),e.setClearColor(0),e.setRenderTarget(this.beautyRenderTarget),e.clear(),e.render(this.scene,this.camera),this.supportsDepthTextureExtension||this.renderOverride(e,this.depthMaterial,this.depthRenderTarget,0,1),this.supportsNormalTexture&&this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.renderPass(e,this.saoMaterial,this.saoRenderTarget,16777215,1),this.params.saoBlur&&(this.renderPass(e,this.vBlurMaterial,this.blurIntermediateRenderTarget,16777215,1),this.renderPass(e,this.hBlurMaterial,this.saoRenderTarget,16777215,1));let h=this.materialCopy;3===this.params.output?this.supportsDepthTextureExtension?(this.materialCopy.uniforms.tDiffuse.value=this.beautyRenderTarget.depthTexture,this.materialCopy.needsUpdate=!0):(this.depthCopy.uniforms.tDiffuse.value=this.depthRenderTarget.texture,this.depthCopy.needsUpdate=!0,h=this.depthCopy):4===this.params.output?(this.materialCopy.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.materialCopy.needsUpdate=!0):(this.materialCopy.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.materialCopy.needsUpdate=!0),0===this.params.output?h.blending=r.CustomBlending:h.blending=r.NoBlending,this.renderPass(e,h,this.renderToScreen?null:a),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=i}renderPass(e,r,t,a,s){e.getClearColor(this.originalClearColor);const i=e.getClearAlpha(),l=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,null!=a&&(e.setClearColor(a),e.setClearAlpha(s||0),e.clear()),this.fsQuad.material=r,this.fsQuad.render(e),e.autoClear=l,e.setClearColor(this.originalClearColor),e.setClearAlpha(i)}renderOverride(e,r,t,a,s){e.getClearColor(this.originalClearColor);const i=e.getClearAlpha(),l=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,a=r.clearColor||a,s=r.clearAlpha||s,null!=a&&(e.setClearColor(a),e.setClearAlpha(s||0),e.clear()),this.scene.overrideMaterial=r,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=l,e.setClearColor(this.originalClearColor),e.setClearAlpha(i)}setSize(e,r){this.beautyRenderTarget.setSize(e,r),this.saoRenderTarget.setSize(e,r),this.blurIntermediateRenderTarget.setSize(e,r),this.normalRenderTarget.setSize(e,r),this.depthRenderTarget.setSize(e,r),this.saoMaterial.uniforms.size.value.set(e,r),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.needsUpdate=!0,this.vBlurMaterial.uniforms.size.value.set(e,r),this.vBlurMaterial.needsUpdate=!0,this.hBlurMaterial.uniforms.size.value.set(e,r),this.hBlurMaterial.needsUpdate=!0}}h.OUTPUT={Beauty:1,Default:0,SAO:2,Depth:3,Normal:4},e.SAOPass=h,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("three"),require("./Pass.js"),require("../shaders/SAOShader.js"),require("../shaders/DepthLimitedBlurShader.js"),require("../shaders/CopyShader.js"),require("../shaders/UnpackDepthRGBAShader.js")):"function"==typeof define&&define.amd?define(["exports","three","./Pass","../shaders/SAOShader","../shaders/DepthLimitedBlurShader","../shaders/CopyShader","../shaders/UnpackDepthRGBAShader"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE,e.THREE,e.THREE,e.THREE,e.THREE)}();
