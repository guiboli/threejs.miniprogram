!function(){var e,t;e=this,t=function(e,t){"use strict";class r extends t.Loader{constructor(e){super(e)}load(e,r,n,o){const i=this,s=new t.FileLoader(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,(function(t){try{r(i.parse(t))}catch(t){o?o(t):console.error(t),i.manager.itemError(e)}}),n,o)}parse(e){function r(e,t,r){for(let n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n))return!1;return!0}const n=function(e){if("string"==typeof e){const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=255&e.charCodeAt(r);return t.buffer||t}return e}(e);return function(e){const t=new DataView(e);if(84+50*t.getUint32(80,!0)===t.byteLength)return!0;const n=[115,111,108,105,100];for(let e=0;e<5;e++)if(r(n,t,e))return!1;return!0}(n)?function(e){const r=new DataView(e),n=r.getUint32(80,!0);let o,i,s,a,l,f,u,c,g=!1;for(let e=0;e<70;e++)1129270351==r.getUint32(e,!1)&&82==r.getUint8(e+4)&&61==r.getUint8(e+5)&&(g=!0,a=new Float32Array(3*n*3),l=r.getUint8(e+6)/255,f=r.getUint8(e+7)/255,u=r.getUint8(e+8)/255,c=r.getUint8(e+9)/255);const d=new t.BufferGeometry,h=new Float32Array(3*n*3),p=new Float32Array(3*n*3);for(let e=0;e<n;e++){const t=84+50*e,n=r.getFloat32(t,!0),c=r.getFloat32(t+4,!0),d=r.getFloat32(t+8,!0);if(g){const e=r.getUint16(t+48,!0);0==(32768&e)?(o=(31&e)/31,i=(e>>5&31)/31,s=(e>>10&31)/31):(o=l,i=f,s=u)}for(let l=1;l<=3;l++){const f=t+12*l,u=3*e*3+3*(l-1);h[u]=r.getFloat32(f,!0),h[u+1]=r.getFloat32(f+4,!0),h[u+2]=r.getFloat32(f+8,!0),p[u]=n,p[u+1]=c,p[u+2]=d,g&&(a[u]=o,a[u+1]=i,a[u+2]=s)}}return d.setAttribute("position",new t.BufferAttribute(h,3)),d.setAttribute("normal",new t.BufferAttribute(p,3)),g&&(d.setAttribute("color",new t.BufferAttribute(a,3)),d.hasColors=!0,d.alpha=c),d}(n):function(e){const r=new t.BufferGeometry,n=/solid([\s\S]*?)endsolid/g,o=/facet([\s\S]*?)endfacet/g;let i=0;const s=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,a=new RegExp("vertex"+s+s+s,"g"),l=new RegExp("normal"+s+s+s,"g"),f=[],u=[],c=new t.Vector3;let g,d=0,h=0,p=0;for(;null!==(g=n.exec(e));){h=p;const e=g[0];for(;null!==(g=o.exec(e));){let e=0,t=0;const r=g[0];for(;null!==(g=l.exec(r));)c.x=parseFloat(g[1]),c.y=parseFloat(g[2]),c.z=parseFloat(g[3]),t++;for(;null!==(g=a.exec(r));)f.push(parseFloat(g[1]),parseFloat(g[2]),parseFloat(g[3])),u.push(c.x,c.y,c.z),e++,p++;1!==t&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+i),3!==e&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+i),i++}const t=h,n=p-h;r.addGroup(t,n,d),d++}return r.setAttribute("position",new t.Float32BufferAttribute(f,3)),r.setAttribute("normal",new t.Float32BufferAttribute(u,3)),r}("string"!=typeof(o=e)?t.LoaderUtils.decodeText(new Uint8Array(o)):o);var o}}e.STLLoader=r,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
