!function(){var e,t;e=this,t=function(e,t,r){"use strict";function n(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var o=n(r);class s extends t.Loader{constructor(e){super(e),this.availableExtensions=[]}load(e,r,n,o){const s=this,i=new t.FileLoader(s.manager);i.setPath(s.path),i.setResponseType("arraybuffer"),i.setRequestHeader(s.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(t){try{r(s.parse(t))}catch(t){o?o(t):console.error(t),s.manager.itemError(e)}}),n,o)}parse(e){const r=this,n=new t.TextureLoader(this.manager);function s(e){const t=[],r=(new DOMParser).parseFromString(e,"application/xml").querySelectorAll("Relationship");for(let e=0;e<r.length;e++){const n=r[e],o={target:n.getAttribute("Target"),id:n.getAttribute("Id"),type:n.getAttribute("Type")};t.push(o)}return t}function i(e){const t={id:e.getAttribute("id"),basematerials:[]},r=e.querySelectorAll("base");for(let e=0;e<r.length;e++){const n=c(r[e]);n.index=e,t.basematerials.push(n)}return t}function l(e){const t={id:e.getAttribute("id"),texid:e.getAttribute("texid"),displaypropertiesid:e.getAttribute("displaypropertiesid")},r=e.querySelectorAll("tex2coord"),n=[];for(let e=0;e<r.length;e++){const t=r[e],o=t.getAttribute("u"),s=t.getAttribute("v");n.push(parseFloat(o),parseFloat(s))}return t.uvs=new Float32Array(n),t}function u(e){const r={id:e.getAttribute("id"),displaypropertiesid:e.getAttribute("displaypropertiesid")},n=e.querySelectorAll("color"),o=[],s=new t.Color;for(let e=0;e<n.length;e++){const t=n[e].getAttribute("color");s.setStyle(t.substring(0,7)),s.convertSRGBToLinear(),o.push(s.r,s.g,s.b)}return r.colors=new Float32Array(o),r}function a(e){const t={id:e.getAttribute("id")},r=e.querySelectorAll("pbmetallic"),n=[];for(let e=0;e<r.length;e++){const t=r[e];n.push({name:t.getAttribute("name"),metallicness:parseFloat(t.getAttribute("metallicness")),roughness:parseFloat(t.getAttribute("roughness"))})}return t.data=n,t}function c(e){const t={};return t.name=e.getAttribute("name"),t.displaycolor=e.getAttribute("displaycolor"),t.displaypropertiesid=e.getAttribute("displaypropertiesid"),t}function p(e){const t={};t.objectId=e.getAttribute("objectid");const r=e.getAttribute("transform");return r&&(t.transform=d(r)),t}function d(e){const r=[];e.split(" ").forEach((function(e){r.push(parseFloat(e))}));const n=new t.Matrix4;return n.set(r[0],r[3],r[6],r[9],r[1],r[4],r[7],r[10],r[2],r[5],r[8],r[11],0,0,0,1),n}function f(e){const t={type:e.getAttribute("type")},r=e.getAttribute("id");r&&(t.id=r);const n=e.getAttribute("pid");n&&(t.pid=n);const o=e.getAttribute("pindex");o&&(t.pindex=o);const s=e.getAttribute("thumbnail");s&&(t.thumbnail=s);const i=e.getAttribute("partnumber");i&&(t.partnumber=i);const l=e.getAttribute("name");l&&(t.name=l);const u=e.querySelector("mesh");u&&(t.mesh=function(e){const t={},r=[],n=e.querySelectorAll("vertices vertex");for(let e=0;e<n.length;e++){const t=n[e],o=t.getAttribute("x"),s=t.getAttribute("y"),i=t.getAttribute("z");r.push(parseFloat(o),parseFloat(s),parseFloat(i))}t.vertices=new Float32Array(r);const o=[],s=[],i=e.querySelectorAll("triangles triangle");for(let e=0;e<i.length;e++){const t=i[e],r=t.getAttribute("v1"),n=t.getAttribute("v2"),l=t.getAttribute("v3"),u=t.getAttribute("p1"),a=t.getAttribute("p2"),c=t.getAttribute("p3"),p=t.getAttribute("pid"),d={};d.v1=parseInt(r,10),d.v2=parseInt(n,10),d.v3=parseInt(l,10),s.push(d.v1,d.v2,d.v3),u&&(d.p1=parseInt(u,10)),a&&(d.p2=parseInt(a,10)),c&&(d.p3=parseInt(c,10)),p&&(d.pid=p),0<Object.keys(d).length&&o.push(d)}return t.triangleProperties=o,t.triangles=new Uint32Array(s),t}(u));const a=e.querySelector("components");return a&&(t.components=function(e){const t=[],r=e.querySelectorAll("component");for(let e=0;e<r.length;e++){const n=p(r[e]);t.push(n)}return t}(a)),t}function h(e){const t={unit:e.getAttribute("unit")||"millimeter"},r=e.querySelectorAll("metadata");r&&(t.metadata=function(e){const t={};for(let r=0;r<e.length;r++){const n=e[r],o=n.getAttribute("name");0<=["Title","Designer","Description","Copyright","LicenseTerms","Rating","CreationDate","ModificationDate"].indexOf(o)&&(t[o]=n.textContent)}return t}(r));const n=e.querySelector("resources");n&&(t.resources=function(e){const t={basematerials:{}},r=e.querySelectorAll("basematerials");for(let e=0;e<r.length;e++){const n=i(r[e]);t.basematerials[n.id]=n}t.texture2d={};const n=e.querySelectorAll("texture2d");for(let e=0;e<n.length;e++){const r={id:(o=n[e]).getAttribute("id"),path:o.getAttribute("path"),contenttype:o.getAttribute("contenttype"),tilestyleu:o.getAttribute("tilestyleu"),tilestylev:o.getAttribute("tilestylev"),filter:o.getAttribute("filter")};t.texture2d[r.id]=r}var o;t.colorgroup={};const s=e.querySelectorAll("colorgroup");for(let e=0;e<s.length;e++){const r=u(s[e]);t.colorgroup[r.id]=r}t.pbmetallicdisplayproperties={};const c=e.querySelectorAll("pbmetallicdisplayproperties");for(let e=0;e<c.length;e++){const r=a(c[e]);t.pbmetallicdisplayproperties[r.id]=r}t.texture2dgroup={};const p=e.querySelectorAll("texture2dgroup");for(let e=0;e<p.length;e++){const r=l(p[e]);t.texture2dgroup[r.id]=r}t.object={};const d=e.querySelectorAll("object");for(let e=0;e<d.length;e++){const r=f(d[e]);t.object[r.id]=r}return t}(n));const o=e.querySelector("build");return o&&(t.build=function(e){const t=[],r=e.querySelectorAll("item");for(let e=0;e<r.length;e++){const n=r[e],o={objectId:n.getAttribute("objectid")},s=n.getAttribute("transform");s&&(o.transform=d(s)),t.push(o)}return t}(o)),t}function g(e,r,o,s){const i=e.texid,l=o.resources.texture2d[i];if(l){const e=s[l.path],r=l.contenttype,o=new Blob([e],{type:r}),i=URL.createObjectURL(o),u=n.load(i,(function(){URL.revokeObjectURL(i)}));switch(u.encoding=t.sRGBEncoding,l.tilestyleu){case"wrap":default:u.wrapS=t.RepeatWrapping;break;case"mirror":u.wrapS=t.MirroredRepeatWrapping;break;case"none":case"clamp":u.wrapS=t.ClampToEdgeWrapping}switch(l.tilestylev){case"wrap":default:u.wrapT=t.RepeatWrapping;break;case"mirror":u.wrapT=t.MirroredRepeatWrapping;break;case"none":case"clamp":u.wrapT=t.ClampToEdgeWrapping}switch(l.filter){case"auto":default:u.magFilter=t.LinearFilter,u.minFilter=t.LinearMipmapLinearFilter;break;case"linear":u.magFilter=t.LinearFilter,u.minFilter=t.LinearFilter;break;case"nearest":u.magFilter=t.NearestFilter,u.minFilter=t.NearestFilter}return u}return null}function b(e,r,n,o,s,i,l){const u=l.pindex,a={};for(let e=0,t=r.length;e<t;e++){const t=r[e],n=void 0!==t.p1?t.p1:u;void 0===a[n]&&(a[n]=[]),a[n].push(t)}const c=Object.keys(a),p=[];for(let r=0,u=c.length;r<u;r++){const u=c[r],d=a[u],f=w(e.basematerials[u],o,s,i,l,S),h=new t.BufferGeometry,g=[],b=n.vertices;for(let e=0,t=d.length;e<t;e++){const t=d[e];g.push(b[3*t.v1+0]),g.push(b[3*t.v1+1]),g.push(b[3*t.v1+2]),g.push(b[3*t.v2+0]),g.push(b[3*t.v2+1]),g.push(b[3*t.v2+2]),g.push(b[3*t.v3+0]),g.push(b[3*t.v3+1]),g.push(b[3*t.v3+2])}h.setAttribute("position",new t.Float32BufferAttribute(g,3));const m=new t.Mesh(h,f);p.push(m)}return p}function m(e,r,n,o,s,i,l){const u=new t.BufferGeometry,a=[],c=[],p=n.vertices,d=e.uvs;for(let e=0,t=r.length;e<t;e++){const t=r[e];a.push(p[3*t.v1+0]),a.push(p[3*t.v1+1]),a.push(p[3*t.v1+2]),a.push(p[3*t.v2+0]),a.push(p[3*t.v2+1]),a.push(p[3*t.v2+2]),a.push(p[3*t.v3+0]),a.push(p[3*t.v3+1]),a.push(p[3*t.v3+2]),c.push(d[2*t.p1+0]),c.push(d[2*t.p1+1]),c.push(d[2*t.p2+0]),c.push(d[2*t.p2+1]),c.push(d[2*t.p3+0]),c.push(d[2*t.p3+1])}u.setAttribute("position",new t.Float32BufferAttribute(a,3)),u.setAttribute("uv",new t.Float32BufferAttribute(c,2));const f=w(e,o,s,i,l,g),h=new t.MeshPhongMaterial({map:f,flatShading:!0});return new t.Mesh(u,h)}function y(e,r,n,o){const s=new t.BufferGeometry,i=[],l=[],u=n.vertices,a=e.colors;for(let e=0,t=r.length;e<t;e++){const t=r[e],n=t.v1,s=t.v2,c=t.v3;i.push(u[3*n+0]),i.push(u[3*n+1]),i.push(u[3*n+2]),i.push(u[3*s+0]),i.push(u[3*s+1]),i.push(u[3*s+2]),i.push(u[3*c+0]),i.push(u[3*c+1]),i.push(u[3*c+2]);const p=void 0!==t.p1?t.p1:o.pindex,d=void 0!==t.p2?t.p2:p,f=void 0!==t.p3?t.p3:p;l.push(a[3*p+0]),l.push(a[3*p+1]),l.push(a[3*p+2]),l.push(a[3*d+0]),l.push(a[3*d+1]),l.push(a[3*d+2]),l.push(a[3*f+0]),l.push(a[3*f+1]),l.push(a[3*f+2])}s.setAttribute("position",new t.Float32BufferAttribute(i,3)),s.setAttribute("color",new t.Float32BufferAttribute(l,3));const c=new t.MeshPhongMaterial({vertexColors:!0,flatShading:!0});return new t.Mesh(s,c)}function A(e){const r=new t.BufferGeometry;r.setIndex(new t.BufferAttribute(e.triangles,1)),r.setAttribute("position",new t.BufferAttribute(e.vertices,3));const n=new t.MeshPhongMaterial({color:16777215,flatShading:!0});return new t.Mesh(r,n)}function v(e,t){return void 0!==t.resources.texture2dgroup[e]?"texture":void 0!==t.resources.basematerials[e]?"material":void 0!==t.resources.colorgroup[e]?"vertexColors":"default"===e?"default":void 0}function x(e,r,n,o,s){const i=new t.Group,l=function(e,t){const r={},n=e.triangleProperties,o=t.pid;for(let e=0,t=n.length;e<t;e++){const t=n[e];let s=void 0!==t.pid?t.pid:o;void 0===s&&(s="default"),void 0===r[s]&&(r[s]=[]),r[s].push(t)}return r}(e,s),u=function(e,t,r,n,o,s){const i=Object.keys(e),l=[];for(let u=0,a=i.length;u<a;u++){const a=i[u],c=e[a];switch(v(a,n)){case"material":const e=b(n.resources.basematerials[a],c,t,r,n,o,s);for(let t=0,r=e.length;t<r;t++)l.push(e[t]);break;case"texture":const i=n.resources.texture2dgroup[a];l.push(m(i,c,t,r,n,o,s));break;case"vertexColors":const u=n.resources.colorgroup[a];l.push(y(u,c,t,s));break;case"default":l.push(A(t));break;default:console.error("THREE.3MFLoader: Unsupported resource type.")}}if(s.name)for(let e=0;e<l.length;e++)l[e].name=s.name;return l}(l,e,r,n,o,s);for(let e=0,t=u.length;e<t;e++)i.add(u[e]);return i}function w(e,t,r,n,o,s){return void 0!==e.build||(e.build=s(e,t,r,n,o)),e.build}function S(e,r,n){let o;const s=e.displaypropertiesid,i=n.resources.pbmetallicdisplayproperties;if(null!==s&&void 0!==i[s]){const r=i[s].data[e.index];o=new t.MeshStandardMaterial({flatShading:!0,roughness:r.roughness,metalness:r.metallicness})}else o=new t.MeshPhongMaterial({flatShading:!0});o.name=e.name;const l=e.displaycolor,u=l.substring(0,7);return o.color.setStyle(u),o.color.convertSRGBToLinear(),9===l.length&&(o.opacity=parseInt(l.charAt(7)+l.charAt(8),16)/255),o}function F(e,r,n,o){const s=new t.Group;for(let t=0;t<e.length;t++){const i=e[t];let l=r[i.objectId];void 0===l&&(M(i.objectId,r,n,o),l=r[i.objectId]);const u=l.clone(),a=i.transform;a&&u.applyMatrix4(a),s.add(u)}return s}function M(e,t,n,o){const s=n.resources.object[e];if(s.mesh){const e=s.mesh;!function(e,t,n){if(!e)return;const o=[],s=Object.keys(e);for(let e=0;e<s.length;e++){const t=s[e];for(let e=0;e<r.availableExtensions.length;e++){const n=r.availableExtensions[e];n.ns===t&&o.push(n)}}for(let r=0;r<o.length;r++){const s=o[r];s.apply(n,e[s.ns],t)}}(n.extensions,e,n.xml),t[s.id]=w(e,t,n,o,s,x)}else{const e=s.components;t[s.id]=w(e,t,n,o,s,F)}s.name&&(t[s.id].name=s.name)}const j=function(e){let r,n,i=null,l=null;const u=[],a=[];let c;const p={},d={};try{i=o.unzipSync(new Uint8Array(e))}catch(e){if(e instanceof ReferenceError)return console.error("THREE.3MFLoader: fflate missing and file is compressed."),null}for(l in i)l.match(/\_rels\/.rels$/)?r=l:l.match(/3D\/_rels\/.*\.model\.rels$/)?n=l:l.match(/^3D\/.*\.model$/)?u.push(l):l.match(/^3D\/Textures?\/.*/)&&a.push(l);const f=i[r],g=s(t.LoaderUtils.decodeText(f));if(n){const e=i[n];c=s(t.LoaderUtils.decodeText(e))}for(let e=0;e<u.length;e++){const r=u[e],n=i[r],o=t.LoaderUtils.decodeText(n),s=(new DOMParser).parseFromString(o,"application/xml");"model"!==s.documentElement.nodeName.toLowerCase()&&console.error("THREE.3MFLoader: Error loading 3MF - no 3MF document found: ",r);const l=s.querySelector("model"),a={};for(let e=0;e<l.attributes.length;e++){const t=l.attributes[e];t.name.match(/^xmlns:(.+)$/)&&(a[t.value]=RegExp.$1)}const c=h(l);c.xml=l,0<Object.keys(a).length&&(c.extensions=a),p[r]=c}for(let e=0;e<a.length;e++){const t=a[e];d[t]=i[t].buffer}return{rels:g,modelRels:c,model:p,printTicket:{},texture:d}}(e),E=function(e){const t=e.model,r=e.modelRels,n={},o=Object.keys(t),s={};if(r)for(let t=0,n=r.length;t<n;t++){const n=r[t],o=n.target.substring(1);e.texture[o]&&(s[n.target]=e.texture[o])}for(let e=0;e<o.length;e++){const r=t[o[e]],i=Object.keys(r.resources.object);for(let e=0;e<i.length;e++)M(i[e],n,r,s)}return n}(j);return function(e,r){const n=new t.Group,o=function(e){for(let t=0;t<e.length;t++){const r=e[t];if("model"===r.target.split(".").pop().toLowerCase())return r}}(r.rels),s=r.model[o.target.substring(1)].build;for(let t=0;t<s.length;t++){const r=s[t],o=e[r.objectId].clone(),i=r.transform;i&&o.applyMatrix4(i),n.add(o)}return n}(E,j)}addExtension(e){this.availableExtensions.push(e)}}e.ThreeMFLoader=s,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("../libs/fflate.module.js")):"function"==typeof define&&define.amd?define(["exports","three","../libs/fflate.module"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE)}();
