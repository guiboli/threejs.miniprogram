!function(){var e,t;e=this,t=function(e,t,n){"use strict";function o(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var a=o(n);class r extends t.Loader{constructor(e){super(e)}load(e,n,o,a){const r=this,l=new t.FileLoader(r.manager);l.setPath(r.path),l.setResponseType("arraybuffer"),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(e,(function(t){try{n(r.parse(t))}catch(t){a?a(t):console.error(t),r.manager.itemError(e)}}),o,a)}parse(e){function n(e){let n="AMF Material";const a=e.attributes.id.textContent;let r={r:1,g:1,b:1,a:1},l=null;for(let t=0;t<e.childNodes.length;t++){const a=e.childNodes[t];"metadata"===a.nodeName&&void 0!==a.attributes.type?"name"===a.attributes.type.value&&(n=a.textContent):"color"===a.nodeName&&(r=o(a))}return l=new t.MeshPhongMaterial({flatShading:!0,color:new t.Color(r.r,r.g,r.b),name:n}),1!==r.a&&(l.transparent=!0,l.opacity=r.a),{id:a,material:l}}function o(e){const t={r:1,g:1,b:1,a:1};for(let n=0;n<e.childNodes.length;n++){const o=e.childNodes[n];"r"===o.nodeName?t.r=o.textContent:"g"===o.nodeName?t.g=o.textContent:"b"===o.nodeName?t.b=o.textContent:"a"===o.nodeName&&(t.a=o.textContent)}return t}function r(e){const t={name:"",triangles:[],materialid:null};let n=e.firstElementChild;for(void 0!==e.attributes.materialid&&(t.materialId=e.attributes.materialid.nodeValue);n;){if("metadata"===n.nodeName)void 0!==n.attributes.type&&"name"===n.attributes.type.value&&(t.name=n.textContent);else if("triangle"===n.nodeName){const e=n.getElementsByTagName("v1")[0].textContent,o=n.getElementsByTagName("v2")[0].textContent,a=n.getElementsByTagName("v3")[0].textContent;t.triangles.push(e,o,a)}n=n.nextElementSibling}return t}function l(e){const t=[],n=[];let o=e.firstElementChild;for(;o;){if("vertex"===o.nodeName){let e=o.firstElementChild;for(;e;){if("coordinates"===e.nodeName){const n=e.getElementsByTagName("x")[0].textContent,o=e.getElementsByTagName("y")[0].textContent,a=e.getElementsByTagName("z")[0].textContent;t.push(n,o,a)}else if("normal"===e.nodeName){const t=e.getElementsByTagName("nx")[0].textContent,o=e.getElementsByTagName("ny")[0].textContent,a=e.getElementsByTagName("nz")[0].textContent;n.push(t,o,a)}e=e.nextElementSibling}}o=o.nextElementSibling}return{vertices:t,normals:n}}function i(e){const t=e.attributes.id.textContent,n={name:"amfobject",meshes:[]};let a=null,i=e.firstElementChild;for(;i;){if("metadata"===i.nodeName)void 0!==i.attributes.type&&"name"===i.attributes.type.value&&(n.name=i.textContent);else if("color"===i.nodeName)a=o(i);else if("mesh"===i.nodeName){let e=i.firstElementChild;const t={vertices:[],normals:[],volumes:[],color:a};for(;e;){if("vertices"===e.nodeName){const n=l(e);t.normals=t.normals.concat(n.normals),t.vertices=t.vertices.concat(n.vertices)}else"volume"===e.nodeName&&t.volumes.push(r(e));e=e.nextElementSibling}n.meshes.push(t)}i=i.nextElementSibling}return{id:t,obj:n}}const s=function(e){let n=new DataView(e);if("PK"===String.fromCharCode(n.getUint8(0),n.getUint8(1))){let t=null,o=null;console.log("THREE.AMFLoader: Loading Zip");try{t=a.unzipSync(new Uint8Array(e))}catch(e){if(e instanceof ReferenceError)return console.log("THREE.AMFLoader: fflate missing and file is compressed."),null}for(o in t)if(".amf"===o.toLowerCase().slice(-4))break;console.log("THREE.AMFLoader: Trying to load file asset: "+o),n=new DataView(t[o].buffer)}const o=t.LoaderUtils.decodeText(n),r=(new DOMParser).parseFromString(o,"application/xml");return"amf"!==r.documentElement.nodeName.toLowerCase()?(console.log("THREE.AMFLoader: Error loading AMF - no AMF document found."),null):r}(e);let m="",d="";const c=function(e){let t=1,n="millimeter";void 0!==e.documentElement.attributes.unit&&(n=e.documentElement.attributes.unit.value.toLowerCase());const o={millimeter:1,inch:25.4,feet:304.8,meter:1e3,micron:.001};return void 0!==o[n]&&(t=o[n]),console.log("THREE.AMFLoader: Unit scale: "+t),t}(s),u={},f={},g=s.documentElement.childNodes;let b,h;for(b=0;b<g.length;b++){const e=g[b];if("metadata"===e.nodeName)void 0!==e.attributes.type&&("name"===e.attributes.type.value?m=e.textContent:"author"===e.attributes.type.value&&(d=e.textContent));else if("material"===e.nodeName){const t=n(e);u[t.id]=t.material}else if("object"===e.nodeName){const t=i(e);f[t.id]=t.obj}}const E=new t.Group,p=new t.MeshPhongMaterial({color:11184895,flatShading:!0});E.name=m,E.userData.author=d,E.userData.loader="AMF";for(const e in f){const n=f[e],o=n.meshes,a=new t.Group;for(a.name=n.name||"",b=0;b<o.length;b++){let e=p;const n=o[b],r=new t.Float32BufferAttribute(n.vertices,3);let l=null;if(n.normals.length&&(l=new t.Float32BufferAttribute(n.normals,3)),n.color){const o=n.color;e=p.clone(),e.color=new t.Color(o.r,o.g,o.b),1!==o.a&&(e.transparent=!0,e.opacity=o.a)}const i=n.volumes;for(h=0;h<i.length;h++){const n=i[h],o=new t.BufferGeometry;let s=e;o.setIndex(n.triangles),o.setAttribute("position",r.clone()),l&&o.setAttribute("normal",l.clone()),void 0!==u[n.materialId]&&(s=u[n.materialId]),o.scale(c,c,c),a.add(new t.Mesh(o,s.clone()))}}E.add(a)}return E}}e.AMFLoader=r,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three"),require("../libs/fflate.module.js")):"function"==typeof define&&define.amd?define(["exports","three","../libs/fflate.module"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE,e.THREE)}();
