!function(){var e,t;e=this,t=function(e,t){"use strict";class o extends t.Loader{constructor(e){super(e)}load(e,o,n,s){const r=this,a=new t.FileLoader(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,(function(e){let t;try{t=JSON.parse(e)}catch(o){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),t=JSON.parse(e.substring(65,e.length-2))}const n=r.parse(t);o&&o(n)}),n,s)}parse(e){return new n(e)}}class n{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){const o=[],n=function(e,t,o){const n=Array.from(e),r=t/o.resolution,a=(o.boundingBox.yMax-o.boundingBox.yMin+o.underlineThickness)*r,i=[];let c=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)c=0,l-=a;else{const e=s(t,r,c,l,o);c+=e.offsetX,i.push(e.path)}}return i}(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(o,n[e].toShapes());return o}}function s(e,o,n,s,r){const a=r.glyphs[e]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const i=new t.ShapePath;let c,l,h,p,u,d,f,y;if(a.o){const e=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let t=0,r=e.length;t<r;)switch(e[t++]){case"m":c=e[t++]*o+n,l=e[t++]*o+s,i.moveTo(c,l);break;case"l":c=e[t++]*o+n,l=e[t++]*o+s,i.lineTo(c,l);break;case"q":h=e[t++]*o+n,p=e[t++]*o+s,u=e[t++]*o+n,d=e[t++]*o+s,i.quadraticCurveTo(u,d,h,p);break;case"b":h=e[t++]*o+n,p=e[t++]*o+s,u=e[t++]*o+n,d=e[t++]*o+s,f=e[t++]*o+n,y=e[t++]*o+s,i.bezierCurveTo(u,d,f,y,h,p)}}return{offsetX:a.ha*o,path:i}}n.prototype.isFont=!0,e.Font=n,e.FontLoader=o,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
