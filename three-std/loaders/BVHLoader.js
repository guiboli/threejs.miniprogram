!function(){var e,t;e=this,t=function(e,t){"use strict";class o extends t.Loader{constructor(e){super(e),this.animateBonePositions=!0,this.animateBoneRotations=!0}load(e,o,n,r){const s=this,i=new t.FileLoader(s.manager);i.setPath(s.path),i.setRequestHeader(s.requestHeader),i.setWithCredentials(s.withCredentials),i.load(e,(function(t){try{o(s.parse(t))}catch(t){r?r(t):console.error(t),s.manager.itemError(e)}}),n,r)}parse(e){function o(e,n,r){if("ENDSITE"===r.type)return;const s={time:n,position:new t.Vector3,rotation:new t.Quaternion};r.frames.push(s);const i=new t.Quaternion,a=new t.Vector3(1,0,0),l=new t.Vector3(0,1,0),p=new t.Vector3(0,0,1);for(let t=0;t<r.channels.length;t++)switch(r.channels[t]){case"Xposition":s.position.x=parseFloat(e.shift().trim());break;case"Yposition":s.position.y=parseFloat(e.shift().trim());break;case"Zposition":s.position.z=parseFloat(e.shift().trim());break;case"Xrotation":i.setFromAxisAngle(a,parseFloat(e.shift().trim())*Math.PI/180),s.rotation.multiply(i);break;case"Yrotation":i.setFromAxisAngle(l,parseFloat(e.shift().trim())*Math.PI/180),s.rotation.multiply(i);break;case"Zrotation":i.setFromAxisAngle(p,parseFloat(e.shift().trim())*Math.PI/180),s.rotation.multiply(i);break;default:console.warn("THREE.BVHLoader: Invalid channel type.")}for(let t=0;t<r.children.length;t++)o(e,n,r.children[t])}function n(e,o,s){const i={name:"",type:"",frames:[]};s.push(i);let a=o.split(/[\s]+/);"END"===a[0].toUpperCase()&&"SITE"===a[1].toUpperCase()?(i.type="ENDSITE",i.name="ENDSITE"):(i.name=a[1],i.type=a[0].toUpperCase()),"{"!==r(e)&&console.error("THREE.BVHLoader: Expected opening { after type & name"),a=r(e).split(/[\s]+/),"OFFSET"!==a[0]&&console.error("THREE.BVHLoader: Expected OFFSET but got: "+a[0]),4!==a.length&&console.error("THREE.BVHLoader: Invalid number of values for OFFSET.");const l=new t.Vector3(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));if((isNaN(l.x)||isNaN(l.y)||isNaN(l.z))&&console.error("THREE.BVHLoader: Invalid values of OFFSET."),i.offset=l,"ENDSITE"!==i.type){a=r(e).split(/[\s]+/),"CHANNELS"!==a[0]&&console.error("THREE.BVHLoader: Expected CHANNELS definition.");const t=parseInt(a[1]);i.channels=a.splice(2,t),i.children=[]}for(;;){const t=r(e);if("}"===t)return i;i.children.push(n(e,t,s))}}function r(e){let t;for(;0===(t=e.shift().trim()).length;);return t}const s=this,i=function(e){"HIERARCHY"!==r(e)&&console.error("THREE.BVHLoader: HIERARCHY expected.");const t=[],s=n(e,r(e),t);"MOTION"!==r(e)&&console.error("THREE.BVHLoader: MOTION expected.");let i=r(e).split(/[\s]+/);const a=parseInt(i[1]);isNaN(a)&&console.error("THREE.BVHLoader: Failed to read number of frames."),i=r(e).split(/[\s]+/);const l=parseFloat(i[2]);isNaN(l)&&console.error("THREE.BVHLoader: Failed to read frame time.");for(let t=0;t<a;t++)i=r(e).split(/[\s]+/),o(i,t*l,s);return t}(e.split(/[\r\n]+/g)),a=[];!function e(o,n){const r=new t.Bone;if(n.push(r),r.position.add(o.offset),r.name=o.name,"ENDSITE"!==o.type)for(let t=0;t<o.children.length;t++)r.add(e(o.children[t],n));return r}(i[0],a);const l=function(e){const o=[];for(let n=0;n<e.length;n++){const r=e[n];if("ENDSITE"===r.type)continue;const i=[],a=[],l=[];for(let e=0;e<r.frames.length;e++){const t=r.frames[e];i.push(t.time),a.push(t.position.x+r.offset.x),a.push(t.position.y+r.offset.y),a.push(t.position.z+r.offset.z),l.push(t.rotation.x),l.push(t.rotation.y),l.push(t.rotation.z),l.push(t.rotation.w)}s.animateBonePositions&&o.push(new t.VectorKeyframeTrack(".bones["+r.name+"].position",i,a)),s.animateBoneRotations&&o.push(new t.QuaternionKeyframeTrack(".bones["+r.name+"].quaternion",i,l))}return new t.AnimationClip("animation",-1,o)}(i);return{skeleton:new t.Skeleton(a),clip:l}}}e.BVHLoader=o,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE=e["THREE-STD"]||{},e.THREE)}();
